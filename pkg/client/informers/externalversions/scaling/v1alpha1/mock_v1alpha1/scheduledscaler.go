// Code generated by MockGen. DO NOT EDIT.
// Source: scheduledscaler.go

// Package mock_v1alpha1 is a generated GoMock package.
package mock_v1alpha1

import (
	gomock "github.com/golang/mock/gomock"
	cache "k8s.io/client-go/tools/cache"
	v1alpha1 "k8s.restdev.com/operators/pkg/client/listers/scaling/v1alpha1"
	reflect "reflect"
)

// MockScheduledScalerInformer is a mock of ScheduledScalerInformer interface
type MockScheduledScalerInformer struct {
	ctrl     *gomock.Controller
	recorder *MockScheduledScalerInformerMockRecorder
}

// MockScheduledScalerInformerMockRecorder is the mock recorder for MockScheduledScalerInformer
type MockScheduledScalerInformerMockRecorder struct {
	mock *MockScheduledScalerInformer
}

// NewMockScheduledScalerInformer creates a new mock instance
func NewMockScheduledScalerInformer(ctrl *gomock.Controller) *MockScheduledScalerInformer {
	mock := &MockScheduledScalerInformer{ctrl: ctrl}
	mock.recorder = &MockScheduledScalerInformerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockScheduledScalerInformer) EXPECT() *MockScheduledScalerInformerMockRecorder {
	return m.recorder
}

// Informer mocks base method
func (m *MockScheduledScalerInformer) Informer() cache.SharedIndexInformer {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Informer")
	ret0, _ := ret[0].(cache.SharedIndexInformer)
	return ret0
}

// Informer indicates an expected call of Informer
func (mr *MockScheduledScalerInformerMockRecorder) Informer() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Informer", reflect.TypeOf((*MockScheduledScalerInformer)(nil).Informer))
}

// Lister mocks base method
func (m *MockScheduledScalerInformer) Lister() v1alpha1.ScheduledScalerLister {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Lister")
	ret0, _ := ret[0].(v1alpha1.ScheduledScalerLister)
	return ret0
}

// Lister indicates an expected call of Lister
func (mr *MockScheduledScalerInformerMockRecorder) Lister() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Lister", reflect.TypeOf((*MockScheduledScalerInformer)(nil).Lister))
}
